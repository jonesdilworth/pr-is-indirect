//
// CSS Socks — Grid
// ©2014, Corey Ward
//

// +++ Default Configuration

// Namespaces
$container-namespace: "container" !default;
$grid-namespace: "grid" !default;
$grid-column-namespace: "col" !default;

// $col-groups are the column groups you want
// For example, $col-groups: (3, 4, 5) will output:
// .col--n-of-3, .col--n-of-4, [...]
$col-groups: (2, 3, 4, 5, 6, 8, 12) !default;

// Gutter width
$gutter-width: 20px !default;

// --- Default Configuration

.#{$container-namespace} {
  max-width: $container-max-width;
  margin: 0 auto;
  padding: 0 $gutter-width;

  @include mobile {
    padding: 0 base(1);
  }
}

.no-#{$container-namespace} {
  padding-left: $gutter-width;
  padding-right: $gutter-width;
}

@include desktop {
  body,
  .#{$container-namespace} {
    min-width: $container-min-width;
  }
}

@mixin push($v) {
  margin-left: $v;
  // margin-right: -($v);
}

.#{$grid-namespace} {
  list-style: none;
  margin-left: -$gutter-width;

  // All direct descendents of .grid get treated the same way.
  // This might be overkill for some, but it’s a time-saver for me.
  .#{$grid-column-namespace} {
    @include desktop {
      box-sizing: border-box;
      display: inline-block;
      margin-right: -0.25em;
      min-height: 1px;
      padding-left: $gutter-width;
      vertical-align: top;
    }
  }

  > %span-all       { width: percentage(1/1); }

  > %one-half       { width: percentage(1/2); }

  > %one-third      { width: percentage(1/3); }
  > %two-thirds     { width: percentage(2/3); }

  > %one-quarter    { width: percentage(1/4); }
  > %two-quarters   { width: percentage(2/4); }
  > %three-quarters { width: percentage(3/4); }

  > %push-span-all       { @include push(percentage(1/1)); }

  > %push-one-half       { @include push(percentage(1/2)); }

  > %push-one-third      { @include push(percentage(1/3)); }
  > %push-two-thirds     { @include push(percentage(2/3)); }

  > %push-one-quarter    { @include push(percentage(1/4)); }
  > %push-two-quarters   { @include push(percentage(2/4)); }
  > %push-three-quarters { @include push(percentage(3/4)); }

  > %pull-span-all       { margin-left: -(percentage(1/1)); }

  > %pull-one-half       { margin-left: -(percentage(1/2)); }

  > %pull-one-third      { margin-left: -(percentage(1/3)); }
  > %pull-two-thirds     { margin-left: -(percentage(2/3)); }

  > %pull-one-quarter    { margin-left: -(percentage(1/4)); }
  > %pull-two-quarters   { margin-left: -(percentage(2/4)); }
  > %pull-three-quarters { margin-left: -(percentage(3/4)); }

  .#{$grid-column-namespace}--top {
    vertical-align: top;
  }

  .#{$grid-column-namespace}--middle {
    vertical-align: middle;
  }

  .#{$grid-column-namespace}--bottom {
    vertical-align: bottom;
  }

  // For each of our column groups...
  @each $group in $col-groups {

    // For each column width from 1 to the column group...
    @for $i from 1 through $group {
      .#{$grid-column-namespace}--#{$i}-of-#{$group} {

        @if percentage($i/$group) == percentage(1/1) {
          @extend %span-all;
        } @else if percentage($i/$group) == percentage(1/2) {
          @extend %one-half;
        } @else if percentage($i/$group) == percentage(1/3) {
          @extend %one-third;
        } @else if percentage($i/$group) == percentage(2/3) {
          @extend %two-thirds;
        } @else if percentage($i/$group) == percentage(1/4) {
          @extend %one-quarter;
        } @else if percentage($i/$group) == percentage(2/4) {
          @extend %two-quarters;
        } @else if percentage($i/$group) == percentage(3/4) {
          @extend %three-quarters;
        } @else {
          width: percentage($i/$group);
        }
      }

      .#{$grid-column-namespace}--push-#{$i}-of-#{$group} {

        @if percentage($i/$group) == percentage(1/1) {
          @extend %push-span-all;
        } @else if percentage($i/$group) == percentage(1/2) {
          @extend %push-one-half;
        } @else if percentage($i/$group) == percentage(1/3) {
          @extend %push-one-third;
        } @else if percentage($i/$group) == percentage(2/3) {
          @extend %push-two-thirds;
        } @else if percentage($i/$group) == percentage(1/4) {
          @extend %push-one-quarter;
        } @else if percentage($i/$group) == percentage(2/4) {
          @extend %push-two-quarters;
        } @else if percentage($i/$group) == percentage(3/4) {
          @extend %push-three-quarters;
        } @else {
          margin-left: percentage($i/$group);
        }
      }

      .#{$grid-column-namespace}--pull-#{$i}-of-#{$group} {

        @if percentage($i/$group) == percentage(1/1) {
          @extend %pull-span-all;
        } @else if percentage($i/$group) == percentage(1/2) {
          @extend %pull-one-half;
        } @else if percentage($i/$group) == percentage(1/3) {
          @extend %pull-one-third;
        } @else if percentage($i/$group) == percentage(2/3) {
          @extend %pull-two-thirds;
        } @else if percentage($i/$group) == percentage(1/4) {
          @extend %pull-one-quarter;
        } @else if percentage($i/$group) == percentage(2/4) {
          @extend %pull-two-quarters;
        } @else if percentage($i/$group) == percentage(3/4) {
          @extend %pull-three-quarters;
        } @else {
          margin-left: -(percentage($i/$group));
        }
      }
    } // end @for

  } // end @each

  .#{$grid-column-namespace} {
    @include mobile {
      display: block;
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      width: auto;
    }
  }

  .#{$grid-column-namespace}--centered {
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

  @include mobile {
    margin-left: 0;
    width: auto;
  }

  @include desktop {
    .#{$grid-column-namespace}--d-first {
      float: left;
    }

    .#{$grid-column-namespace}--d-last {
      float: right;
    }
  }

  // Align column to the bottom. Useful for aligned promo images.
  .#{$grid-column-namespace}--align-bottom {
    vertical-align: bottom;
  }
}

.mobile-#{$grid-namespace} {
  list-style: none;
  margin-left: -$gutter-width;

  @include desktop {
    margin-left: 0;
    width: auto;
  }

  .mobile-#{$grid-column-namespace} {
    box-sizing: border-box;
    display: inline-block;
    margin-right: -0.25em;
    min-height: 1px;
    padding-left: $gutter-width;
    vertical-align: top;

    @include desktop {
      display: block;
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      width: auto;
    }
  }
}

.#{$grid-namespace}--no-gutter {
  margin-left: 0;
  width: 100%;

  > .#{$grid-column-namespace} {
    padding-left: 0;
  }

  .#{$grid-column-namespace}--span-all, & > .span-all {
    margin-left: 0;
    width: 100%;
  }
}
